<project xmlns:ivy="antlib:org.apache.ivy.ant">

    <property name="dir.src" value="Mandelbrot/src/nu/gaffelmannen/apps/mandelbrot" />
    <property name="dir.lib" value="lib" />
	<property name="dir.build" value="build" />
	<property name="dir.build.classes" value="build/classes" />
	<property name="dir.build.jar" value="build/jar" />
    <property name="file.junit" value="junit-3.8.2.jar" />
	<property name="file.output" value="Mandelbrot-1.0.jar" />
	<property name="main-class" value="nu.gaffelmannen.apps.mandelbrot.Mandelbrot" />

    <path id="classpath">
        <fileset dir="${dir.lib}" includes="**/*.jar" />
    </path>

    <mkdir dir="${dir.build}/libs"/>

    <available classname="org.apache.ivy.Main" property="ivy.installed"/>

    <target name="install-ivy" description="Install ivy" unless="ivy.installed">
        <mkdir dir="${user.home}/.ant/lib"/>
        <get dest="${user.home}/.ant/lib/ivy.jar" src="http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.3.0/ivy-2.3.0.jar"/>
        <fail message="Ivy has been installed. Run the build again"/>
    </target>

    <target name="resolve" depends="install-ivy" description="Use ivy to resolve classpaths">
        <ivy:retrieve/>
    </target>

    <target name="clean">
        <delete dir="${dir.build}" />
    		<delete dir="${dir.build.classes}" />
        	<delete dir="${dir.build.jar}" />
    </target>

    <target name="compile" depends="resolve">
        <mkdir dir="${dir.build}" />
    	    <mkdir dir="${dir.build.classes}" />
        <echo>Compiling.</echo>
        <echo>${dir.build}</echo>
        <javac includeantruntime="false" debug="true" srcdir="${dir.src}" destdir="${dir.build.classes}" />
    </target>
	
	<target name="jar" depends="compile">
        <mkdir dir="${dir.build.jar}"/>
        <jar destfile="${dir.build.jar}/${file.output}" basedir="${dir.build.classes}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
        </jar>
    </target>

    <target name="run" depends="jar">
        <java jar="${dir.build.jar}/${file.output}" fork="true" />
    </target>

</project>
